import { json, type LinksFunction, type LoaderArgs } from '@remix-run/node';
import {
  isRouteErrorResponse,
  Links,
  LiveReload,
  Meta,
  Outlet,
  Scripts,
  ScrollRestoration,
  useLoaderData,
  useLocation,
  useRouteError,
} from '@remix-run/react';

import stylesheet from 'tailwind.css';
import SideMenu from './components/SideMenu';
import { getUserSession } from './session.server';
import LinkButton from './components/LinkButton';

// generated by Remix
// import { cssBundleHref } from '@remix-run/css-bundle';
// export const links: LinksFunction = () => [
//   ...(cssBundleHref ? [{ rel: 'stylesheet', href: cssBundleHref }] : []),
// ];

export async function loader({ request }: LoaderArgs) {
  const { nomeCompleto, tipoAcesso } = await getUserSession(request);
  return json({ nomeCompleto, tipoAcesso });
}

export const links: LinksFunction = () => [
  { rel: 'stylesheet', href: stylesheet },
  {
    rel: 'icon',
    type: 'image/png',
    href: '/assets/logo.png',
  },
];

export default function App() {
  const { nomeCompleto, tipoAcesso } = useLoaderData();
  const location = useLocation();
  const isNotOnLoginRoute = location.pathname !== '/login';
  return (
    <html lang="en">
      <head>
        <meta charSet="utf-8" />
        <meta name="viewport" content="width=device-width,initial-scale=1" />
        <Meta />
        <Links />
      </head>
      <body className="text-grey">
        {isNotOnLoginRoute ? (
          <SideMenu user={nomeCompleto} tipoAcesso={tipoAcesso}>
            <Outlet />
          </SideMenu>
        ) : (
          <Outlet />
        )}
        <ScrollRestoration />
        <Scripts />
        <LiveReload />
      </body>
    </html>
  );
}

export function ErrorBoundary() {
  const error = useRouteError();

  if (isRouteErrorResponse(error)) {
    return (
      <html lang="en">
        <head>
          <title>Ops!</title>
          <Meta />
          <Links />
        </head>
        <body className="flex flex-col justify-center items-center w-full h-screen gap-4 text-grey">
          <div className="flex items-center flex-col w-full">
            <p className="font-bold text-3xl">404 </p>
            <p>Página não existente!</p>
          </div>
          <LinkButton to="/login" variant="blue">
            Voltar
          </LinkButton>
          <Scripts />
        </body>
      </html>
    );
  }
  return;
}
