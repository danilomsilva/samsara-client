import { json, type LinksFunction, type LoaderArgs } from '@remix-run/node';
import {
  Links,
  LiveReload,
  Meta,
  Outlet,
  Scripts,
  ScrollRestoration,
  useLoaderData,
  useLocation,
} from '@remix-run/react';

import stylesheet from 'tailwind.css';
import SideMenu from './components/SideMenu';
import { getUserSession } from './session.server';

// generated by Remix
// import { cssBundleHref } from '@remix-run/css-bundle';
// export const links: LinksFunction = () => [
//   ...(cssBundleHref ? [{ rel: 'stylesheet', href: cssBundleHref }] : []),
// ];

export async function loader({ request }: LoaderArgs) {
  const { nomeCompleto } = await getUserSession(request);
  return json({ nomeCompleto });
}

export const links: LinksFunction = () => [
  { rel: 'stylesheet', href: stylesheet },
  {
    rel: 'icon',
    type: 'image/png',
    href: '/assets/logo.png',
  },
];

export default function App() {
  const { nomeCompleto } = useLoaderData();
  const location = useLocation();
  const isNotOnLoginRoute = location.pathname !== '/login';
  return (
    <html lang="en">
      <head>
        <meta charSet="utf-8" />
        <meta name="viewport" content="width=device-width,initial-scale=1" />
        <Meta />
        <Links />
      </head>
      <body className="text-grey">
        {isNotOnLoginRoute ? (
          <SideMenu user={nomeCompleto}>
            <Outlet />
          </SideMenu>
        ) : (
          <Outlet />
        )}
        <ScrollRestoration />
        <Scripts />
        <LiveReload />
      </body>
    </html>
  );
}
